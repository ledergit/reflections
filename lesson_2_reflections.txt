What happens when you initialize a repository? Why do you need to do it?

    You can start using .git to track changes to that repository. no initialize, no tracking.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    Staging area contains only those files that are to be committed in the next commit. Allows you to control what gets committed at a granular level. Lets you work on multiple files but commit only a subset thereof.

How can you use the staging area to make sure you have one commit per logical
change?

    If you have multiple files, you can add only those files to the staging area that include the changes for one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    Branches can be helpful when adding new features or testing things out where you want to preserve a working project.

How do the diagrams help you visualize the branch structure?

    With the diagrams, you can see exactly where new branches were created and you can easily visualize which commits belong to which branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    Merging two branches results in a new version that contains all the changes from both versions that were merged.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

    Automatic merging is potentially faster, but it does not have any intelligence regarding the purpose behind changes from either side. There are certainly cases where automatic merging is appropriate and others where manual merging is required.
