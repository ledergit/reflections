How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Seeing the original value and the new value made it easy to see the difference, and hence the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If something stops working, you can go back and see what it looked like when it still worked.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: You can control commits occurring at logical stopping points
    Cons: If you make bad decisions or are lazy, you don't get a good history.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    When one issue is affected by multiple files, you need to be able to commit all of them at once.
    I suppose you could come up with a use case for this in Google Docs too, but it would be atypical.

How can you use the commands git log and git diff to view the history of files?

    Git log shows the history of all commits. git diff lets you compare two commits.

How might using version control make you more confident to make changes that
could break something?

    Knowing that changes can be reverted means you can feel free to try things out.

Now that you have your workspace set up, what do you want to try using Git for?

    Moving on with this nanodegree!
